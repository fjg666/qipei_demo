<?phprequire_once(MO_LIB_DIR . '/DBAction.class.php');require_once(MO_LIB_DIR . '/ShowPager.class.php');require_once(MO_LIB_DIR . '/Tools.class.php');require_once(MO_LIB_DIR . '/version.php');require_once(MO_LIB_DIR . '/ServerPath.class.php');require_once(MO_LIB_DIR . '/LaiKeLogUtils.class.php');class ModifyAction extends Action{    public function getDefaultView(){        //初始化        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = $this->getContext()->getStorage()->read('store_id');        $admin_name = $this->getContext()->getStorage()->read('admin_name');        $id = addslashes(trim($request->getParameter('id')));//要修改竞拍商品的id        //要编辑的竞拍商品数据        $sql = "select a.id,a.attribute,a.title,a.imgurl,a.price,a.add_price,a.promise,a.starttime,a.endtime,a.s_type,a.status,a.is_show,b.name from lkt_auction_product as a left join lkt_mch as b on a.mch_id = b.id where a.store_id = '$store_id' and b.store_id = '$store_id' and a.recycle = 0 and a.id = '$id'";        $res = $db->select($sql);             if($res){            $s_type = explode(',',$res[0]->s_type);            $sp_type =  Tools::s_type($db, '商品类型', $s_type);        }        $attribute = $res[0]->attribute;        $title = $res[0]->title;        $imgurl = ServerPath::getimgpath($res[0]->imgurl, $store_id);        $start_price = $res[0]->price;        $add_price = $res[0]->add_price;        $promise = $res[0]->promise;        $is_show = $res[0]->is_show;        $starttime = $res[0]->starttime;        $endtime = $res[0]->endtime;        $mch_name = $res[0]->name;        $status = $res[0]->status;        //查询选择商品数据        $attribute = unserialize($attribute);        $pro_id = array_keys($attribute)[0];//商品id        $attr_id = array_values($attribute)[0];//规格id数组        $attr_id = array_values($attr_id)[0];                      $sql_1 = "select  a.num,a.min_inventory,a.attribute,a.price,a.id as attr_id,b.id,b.product_title,b.imgurl from lkt_configure as a left join lkt_product_list as b on a.pid = b.id where b.store_id = '$store_id' and a.id = '$attr_id' and b.id = '$pro_id'";        $res_1 = $db->select($sql_1);             if($res_1){            $attr = unserialize($res_1[0]->attribute);            $attr = array_values($attr);//商品规格            if($attr){                if (gettype($attr[0]) != 'string') unset($attr[0]);            }            $attr = implode(',',$attr);            $num = $res_1[0]->num;            $min_inventory = $res_1[0]->min_inventory;            $price = $res_1[0]->price;            $product_title = $res_1[0]->product_title;              $num = $res_1[0]->num;            $imgurl =  ServerPath::getimgpath($res_1[0]->imgurl,$store_id);        }        //已选商品数据        $request->setAttribute('product_title',$product_title);        $request->setAttribute('attr',$attr);        $request->setAttribute('mch_name',$mch_name);        $request->setAttribute('num',$num);        $request->setAttribute('min_inventory',$min_inventory);        $request->setAttribute('price',$price);        $request->setAttribute('imgurl',$imgurl);        //竞拍参数        $request->setAttribute('id',$id);        $request->setAttribute('title',$title);        $request->setAttribute('start_price',$start_price);        $request->setAttribute('add_price',$add_price);        $request->setAttribute('promise',$promise);        $request->setAttribute('sp_type',$sp_type);        $request->setAttribute('is_show',$is_show);        $request->setAttribute('starttime',$starttime);        $request->setAttribute('endtime',$endtime);        $request->setAttribute('status',$status);                return View :: INPUT;    }    public function execute(){        //初始化        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = $this->getContext()->getStorage()->read('store_id');        $admin_name = $this->getContext()->getStorage()->read('admin_name');        $id = addslashes(trim($request->getParameter('id')));        $title = addslashes(trim($request->getParameter('title')));        $price = addslashes(trim($request->getParameter('price')));//竞拍起价        $add_price = addslashes(trim($request->getParameter('add_price')));//加价        $promise = addslashes(trim($request->getParameter('promise')));//押金        $is_show = addslashes(trim($request->getParameter('is_show')));        $starttime = addslashes(trim($request->getParameter('starttime')));        $endtime = addslashes(trim($request->getParameter('endtime')));        $s_type = $request->getParameter('s_type');//数组        $log = new LaiKeLogUtils('common/auction.log');        if($s_type){              $s_type = implode(',', $s_type);        }        $now = date("Y-m-d H:i:s");        if($starttime){            if($starttime < $now){                echo json_encode(array('status'=>'开始时间不能小于当前时间！'));exit;            }        }        //如果竞拍标题为空，则取商品标题        if(empty($title)){            $sql_0 = "select attribute from lkt_auction_product where store_id = '$store_id' and id = '$id' ";            $res_0 = $db->select($sql_0);            $attribute = $res_0[0]->attribute;            $attribute = unserialize($attribute);            $pro_id = array_keys($attribute)[0];//商品id            $attr_id = array_values($attribute)[0];//规格id数组            $attr_id = array_values($attr_id)[0];            $sql_1 = "select  a.num,a.min_inventory,a.attribute,a.price,a.id as attr_id,b.id,b.product_title,b.imgurl from lkt_configure as a left join lkt_product_list as b on a.pid = b.id where b.store_id = '$store_id' and a.id = '$attr_id' and b.id = '$pro_id'";            $res_1 = $db->select($sql_1);            if($res_1){                $attr = unserialize($res_1[0]->attribute);                $attr = array_values($attr);//商品规格                if($attr){                    if (gettype($attr[0]) != 'string') unset($attr[0]);                }            }                $attr = implode(',',$attr);                      $product_title = $res_1[0]->product_title;                          $title = $product_title.' '.$attr;        }else{            //对修改的标题长度进行判断            if(strlen($title)>60){                echo json_encode(array('status'=>'活动标题不能超过20个中文字符'));                exit;            }        }                       if($price){            if($price < 0 || intval($price) <= 0){                echo json_encode(array('status'=>'竞拍起价不能空和负数！'));exit;            }        }        if($promise){            if($promise < 0 || intval($promise) <= 0){                echo json_encode(array('status'=>'竞拍押金不能为空和负数！'));exit;            }        }               if(empty($add_price) || intval($add_price) <= 0){            echo json_encode(array('status'=>'竞拍加价不能为空！'));exit;        }        if($add_price < 0){            echo json_encode(array('status'=>'竞拍加价不能为负数！'));exit;        }        //计算失效时间        $sql_2 = "select * from lkt_auction_config where store_id = '$store_id'";        $res_2 = $db->select($sql_2);        if($res_2){            $low_pepole = $res_2[0]->low_pepole;            $wait_time = $res_2[0]->wait_time;            $days = $res_2[0]->days;            $content = $res_2[0]->content;        }        //竞拍标题重复判断        $sql = "select * from lkt_auction_product where  store_id = '$store_id' and recycle = 0 and title = '$title' and id != '$id'";        $res = $db->select($sql);        if($res){            $db->admin_record($store_id,$admin_name,'添加竞拍'.$title.'失败',1);            echo json_encode(array('status'=>'竞拍标题不能重复'));            exit;        }         $invalid_time = date('Y-m-d h:i:s',strtotime($endtime." + $days day"));//竞拍活动具体失效日期              if($starttime){//未开始            //判断是否被定时器开始活动            $sql_0 = "select status from lkt_auction_product where store_id = $store_id and id = $id";            $res_0 = $db->select($sql_0);            if(!$res_0){                echo json_encode(array('status'=>'修改失败！'));                exit;            }else{                $status_now = $res_0[0]->status;            }            if($status_now == 1){                $sql = "update lkt_auction_product set title = '$title',add_price = '$add_price',endtime = '$endtime',invalid_time = '$invalid_time',s_type = '$s_type',is_show = '$is_show' where store_id = '$store_id' and id = '$id'";            }else{                $sql = "update lkt_auction_product set title = '$title',price = '$price',add_price = '$add_price',promise = '$promise',current_price = '$price',starttime = '$starttime',endtime = '$endtime',invalid_time = '$invalid_time',s_type = '$s_type',is_show = '$is_show' where store_id = '$store_id' and id = '$id'";            }        }else{//竞拍中            $sql = "update lkt_auction_product set title = '$title',add_price = '$add_price',endtime = '$endtime',invalid_time = '$invalid_time',s_type = '$s_type',is_show = '$is_show' where store_id = '$store_id' and id = '$id'";        }        $res = $db->update($sql);        if($res < 0){            $log -> customerLog(__LINE__.':更新竞拍活动失败，sql为：'.$sql."\r\n");            $db->admin_record($store_id,$admin_name,'修改竞拍商品'.$id.'失败!',2);            echo json_encode(array('status'=>'修改失败！'));exit;        }else{            $db->admin_record($store_id,$admin_name,'修改竞拍商品'.$id.'成功！',2);            echo json_encode(array('status'=>'修改成功！','suc'=>1));exit;        }    }    public function getRequestMethods(){        return Request :: POST;    }}