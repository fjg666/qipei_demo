<?phprequire_once(MO_LIB_DIR . '/DBAction.class.php');require_once(MO_LIB_DIR . '/ShowPager.class.php');require_once(MO_LIB_DIR . '/Tools.class.php');/** * <p>Copyright (c) 2019-2020</p> * <p>Company: www.laiketui.com</p> * @author 熊孔钰 * @content 消息接口 * @date 2019年9月29日 * @version 1.0 */class messageAction extends Action{    public function getDefaultView(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $app = addslashes(trim($request->getParameter('app')));        $store_id = trim($request->getParameter('store_id'));        $store_type = trim($request->getParameter('store_type'));        $access_id = trim($request->getParameter('access_id')); // 授权id        if(!empty($access_id)){ // 存在            $getPayload_test = Tools::verifyToken($db,$store_id,$store_type,$access_id); //对token进行验证签名,如果过期返回false,成功返回数组            if($getPayload_test == false){ // 过期                echo json_encode(array('code' => 404, 'message' => '请登录！'));                exit;            }        }else{            echo json_encode(array('code' => 404, 'message' => '请登录！'));            exit;        }        $this->$app();        return;    }    public function execute(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $app = addslashes(trim($request->getParameter('app')));        $store_id = trim($request->getParameter('store_id'));        $store_type = trim($request->getParameter('store_type'));        $access_id = trim($request->getParameter('access_id')); // 授权id        if(!empty($access_id)){ // 存在            $getPayload_test = Tools::verifyToken($db,$store_id,$store_type,$access_id); //对token进行验证签名,如果过期返回false,成功返回数组            if($getPayload_test == false){ // 过期                echo json_encode(array('code' => 404, 'message' => '请重新登录！'));                exit;            }        }else{            echo json_encode(array('code' => 404, 'message' => '请登录！'));            exit;        }        $this->$app();        return;    }    public function getRequestMethods(){        return Request :: POST;    }    // 消息列表    public function index(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = trim($request->getParameter('store_id'));        $access_id = $request->getParameter('access_id'); // 授权id        // 根据微信id,查询用户id        $sql = "select user_id from lkt_user where store_id = '$store_id' and access_id = '$access_id'";        $r = $db->select($sql);        if (!empty($r)) {            $user_id = $r[0]->user_id;            // 根据用户id,查询消息            $sql = "select * from lkt_system_message where store_id = '$store_id' and recipientid = '$user_id' ORDER BY time desc limit 0,10";            $r = $db->select($sql);            //查询未读数量            $sql01 = "select count(id) as noread from lkt_system_message where store_id = '$store_id' and recipientid = '$user_id' and type = 1";            $r01 = $db->select($sql01);            //查询消息总数            $sql02 = "select count(id) as total from lkt_system_message where store_id = '$store_id' and recipientid = '$user_id'";            $r02 = $db->select($sql02);            echo json_encode(array('code' => 200, 'message' => $r, 'noread' => $r01[0]->noread, 'total' => $r02[0]->total));            exit();        } else {            echo json_encode(array('code' => 115, 'err' => '非法入侵！'));            exit;        }    }    // 后续加载    public function more(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = trim($request->getParameter('store_id'));        $page = intval(trim($request->getParameter('page'))); // 页数        $access_id = $request->getParameter('access_id'); // 授权id        $pagesize = 10;        $start = $page*$pagesize;        // 根据微信id,查询用户id        $sql = "select user_id from lkt_user where store_id = '$store_id' and access_id = '$access_id'";        $r = $db->select($sql);        if (!empty($r)) {            $user_id = $r[0]->user_id;            // 根据用户id,查询消息            $sql = "select * from lkt_system_message where store_id = '$store_id' and recipientid = '$user_id' ORDER BY time desc limit $start,$pagesize";            $r = $db->select($sql);            echo json_encode(array('code' => 200, 'message' => $r));            exit();        } else {            echo json_encode(array('code' => 115, 'err' => '非法入侵！'));            exit;        }    }    // 消息详情    public function oneindex(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = trim($request->getParameter('store_id'));        $access_id = $request->getParameter('access_id'); // 授权id        $id = $request->getParameter('id'); //消息ID        // 根据微信id,查询用户id        $sql = "select user_id from lkt_user where store_id = '$store_id' and access_id = '$access_id'";        $r = $db->select($sql);        if (!empty($r)) {            $user_id = $r[0]->user_id;            // 根据用户id,查询消息表            $sql = "select * from lkt_system_message where store_id = '$store_id' and id = '$id' and recipientid='$user_id'";            $r = $db->select($sql);            // 修改消息为已读状态            $sql001 = "update lkt_system_message set type = '2' where store_id = '$store_id' and id = '$id' and recipientid='$user_id'";            $r001 = $db->update($sql001);            echo json_encode(array('code' => 200, 'message' => $r));            exit();        } else {            echo json_encode(array('code' => 115, 'err' => '非法入侵！'));            exit;        }    }    //全部已读    public function all(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = trim($request->getParameter('store_id'));        $access_id = $request->getParameter('access_id'); // 授权id        // 根据微信id,查询用户id        $sql = "select user_id from lkt_user where store_id = '$store_id' and access_id = '$access_id'";        $r = $db->select($sql);        if (!empty($r)) {            $user_id = $r[0]->user_id;            // 根据用户id,查询地址表            $sql = "select * from lkt_system_message where store_id = '$store_id' and recipientid='$user_id'";            $r = $db->select($sql);            // 修改消息为已读状态            $sql001 = "update lkt_system_message set type = '2' where store_id = '$store_id' and recipientid='$user_id'";            $r001 = $db->update($sql001);            echo json_encode(array('code' => 200, 'message' => $r));            exit();        } else {            echo json_encode(array('code' => 115, 'err' => '非法入侵！'));            exit;        }    }    //删除    public function del(){        $db = DBAction::getInstance();        $request = $this->getContext()->getRequest();        $store_id = trim($request->getParameter('store_id'));        $access_id = $request->getParameter('access_id'); // 授权id        $id = trim($request->getParameter('id')); // 消息ID        // 根据微信id,查询用户id        $sql = "select user_id from lkt_user where store_id = '$store_id' and access_id = '$access_id'";        $r = $db->select($sql);        if (!empty($r)) {            // ID字符串转数组            $ids = explode(',', $id);            foreach ($ids as $k => $v) {// 循环ID                if (!empty($v)) {                    // 删除消息                    $db->delete("delete from lkt_system_message where id = '".intval($v)."'");                }            }            echo json_encode(array('code' => 200, 'message' => '删除成功！'));            exit();        } else {            echo json_encode(array('code' => 115, 'err' => '非法入侵！'));            exit;        }    }}?>